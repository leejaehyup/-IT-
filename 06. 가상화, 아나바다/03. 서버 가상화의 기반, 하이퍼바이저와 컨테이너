3.1 하이퍼바이저의 구조와 역할
    가상화의 핵심 구성요소인 하이퍼바이저(Hyperviosr)와 VM(Virtual Machine, 가상 머신)이 있다.
    하이퍼바이저는 VMM(Virtual Machine Monitor)이라고도 한다.

    호스트 운영체제와 하이퍼바이저는 기능적으로 완전히 다르다고 보면 된다.
    운영체제라는 것이 여러 개의 애플리케이션이 동시에 수행되도록 하는 환경이지만, 하이퍼바이저는 여러 개의 VM이 동시에
    수행하도록 하는 환경을 제공하는 것이다.
    다만, 하이퍼바이저는 운영체제와 합쳐져 있는 형태도 있고 분리된 형태도 있다.
    합쳐져 있는 형태를 타입 1 하이퍼바이저라고 하고, 분리된 형태를 타입 2 하이퍼바이저라고 한다.

    그렇다면 하이퍼바이저의 기능은 무엇일까?
    여러 개의 VM이 한정된 하드웨어 자원을 나눠 쓸 수 있도록 해 주는 것이다.
    물론, 타입 2 하이퍼바이저는 운영체제에 많은 기능을 의존하여 하드웨어 자원을 분배한다.
    
    하드웨어에 운영체제를 설치하고 그 위에 별도의 하이퍼바이저를 설치하는 것보다는 하드웨어에 하이퍼바이저 기능이 있는 운영체제만
    설치하는 것이 더 안정적이고 빠르다. -> 타입 1이 빠르다.

    가성 머신(VM)과 게스트 운영체제는 세밀하게 보면 다른 개념이지만, VM에는 무조건 1개의 운영체제만 설치가 가능하니까 섞어서
    이야기하더라도 무방하다.
    가상화 서버를 의미하는 표현들이 많다. VM, 게스트 운영체제, 도메인, 돔 등의 표현이 있다.

    베어메탈 서버(Bare-metal Server)란? 소프트웨어가 설치되지 않은 하드웨어를 뜻하며, 일반적인 경우는 운영체제가 설치되지 않은 상태의
    서버를 의미한다.

3.2 전가상화와 반가상화 하이퍼바이저
    전가상화와 반가상화는 하이퍼바이저의 역할 범위에 따라 구분한 것이다.
    전가상화는 하이퍼바이저가 호스트 운영체제에서 모든 일을 처리하는 것이고, 반가상화는 일부 역할을 VM의 도움을 받아서 처리하는 개념이다.

    전가상화는 하이퍼바이저를 통해 하드웨어에 직접 접근하기 때문에 게스트 운영체제를 베어메탈 서버에 설치하는 운영체제와 같은 버전으로 사용
    할 수 있다는 것이 큰 장점이다.
    전가상화 제품들은 이러한 장점을 유지하기 위해서 모든 장치에 대한 드라이버를 에뮬레이션 가상화 기법으로 제공하고 바이너리 변환 기법을 통해
    하드웨어에 대한 커널 수준 접근을 가능하게 한다.
    바이너리 변환 기법 - 모든 프로그램은 하드웨어가 이해할 수 있는 명령어로 변화되어 전달되어아 하는데, VM이 하이퍼콜을 통해 하이퍼바이저에게
        명령을 내리면 간단한 바이저리(2진법) 연산을 통해 하드웨어가 이해할 수 있는 명령어로 변환하여 전달하는 기법이다.
    커널 수준 접근 - 리눅스 운영체제에서는 커널만이 모든 하드웨어를 직접 제어할 수 있기 때문에 커널과 같은 수준의 권한으로 
        하드웨어에 접근하는 것을 의미한다.

    반가상화는 운영체제를 그대로 사용할 수 없다.
    반가상화는 구조가 일반적인 서버(베어메탈 서버)의 처리 방식과 다르기 때문에 게스트 운영체제로 사용할 운영체제는 하이퍼바이저에 맞도록 개선되어야 한다.

3.3 컨테이너의 구조와 특징
    PaaS(Platform as a Service)에서 주목받고 있는 컨테이너이다.
    컨테이너(container)는 VM이 없으며, 또 게스트 운영체제도 없습니다.
    컨테이너는 현재 리눅스에서 주로 발전하고 있고, 리눅스 컨테이너는 호스트 운영체제에서 부팅 과정 없이 바로 시작한다.
    호스트 운영체제에서 입장에서 보면 리눅스 컨테이너는 하나의 프로세스로 기동한다.

    컨테이너 구조에서 비롯되는 단점이 있다. 호스트 운영체제인 리눅스 이외의 다른 운영체제에서는 동작하지 않고, 리눅스 계열이 아닌
    다른 운영체제를 설치할 수 없다. 

